# Default values for learning-platform-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

namespace: lst-apps

image:
  repository: asia-south1-docker.pkg.dev/gc-qa6/gc-qa6/mock-api-server
  pullPolicy: IfNotPresent
  tag: latest


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80
  targetport: 3000

ingress:
  enabled: true
  className: "ingress-nginx-office"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: mock-api-server.sprinklr.com
      paths:
        - path: /
          pathType: Exact
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

api:
  deployment: "apps/v1"
  ingress: "networking.k8s.io/v1"

resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 2Gi

livenessProbe:
  httpGet:
    path: /check
    port: 3000

readinessProbe:
  httpGet:
    path: /check
    port: 3000



autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
